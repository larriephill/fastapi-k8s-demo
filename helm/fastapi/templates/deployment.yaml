apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
  labels: { app: fastapi }
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: { app: fastapi }
  template:
    metadata:
      labels: { app: fastapi }
    spec:
      containers:
        - name: fastapi
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          livenessProbe:
            httpGet: { path: /healthz, port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /healthz, port: {{ .Values.service.targetPort }} }
            initialDelaySeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
          env:
            - name: APP_VERSION
              valueFrom:
                configMapKeyRef:
                  name: fastapi-config
                  key: APP_VERSION
            - name: APP_MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: fastapi-config
                  key: APP_MESSAGE
            {{- if .Values.secret.enabled }}
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: SECRET_TOKEN
            {{- end }}

